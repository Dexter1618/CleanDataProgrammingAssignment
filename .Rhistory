setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
f <- file.path(getwd(), "getdata_EDSTATS_Country.csv")
dtEd <- data.table(read.csv(f))
f <- file.path(getwd(), "getdata_data_EDSTATS_Country.csv")
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all=TRUE, by=c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing=TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
dt[, mean(rankingGDP, na.rm=TRUE), by=Income.Group]
breaks <- quantile(dt$rankingGDP, probs=seq(0, 1, 0.2), na.rm=TRUE)
dt$quantileGDP <- cut(dt$rankingGDP, breaks=breaks)
dt[Income.Group == "Lower middle income", .N, by=c("Income.Group", "quantileGDP")]
getwd()
setwd(".")
getwd()
project_path <- "C:\\myfiles\\coursera_datasci\\CleanDataProgrammingAssignment\\"
setwd(project_path)
getwd()
dtSubjectTrain <- fread("subject_train.txt")
dtSubjectTrain <- fread("subject_train.txt")
dtSubjectTest  <- fread("subject_test.txt" )
dtActivityTrain <- fread("Y_train.txt")
dtActivityTest  <- fread("Y_test.txt" )
file_train <- read.table("X_train.txt")
dt_train <- data.table(file_train)
file_test <- read.table("X_test.txt")
dt_test <- data.table(file_train)
dt_train
dtSubject <- rbind(dt_train, dt_test)
setnames(dtSubject, "V1", "subject")
dtActivity <- rbind(dtActivityTrain, dtActivityTest)
setnames(dtActivity, "V1", "activityNum")
dt <- rbind(dtTrain, dtTest)
dtSubject <- rbind(dt_train, dt_test)
setnames(dtSubject, "V1", "subject")
dtActivity <- rbind(dt_train, dt_test)
setnames(dtActivity, "V1", "activityNum")
dt <- rbind(dtTrain, dtTest)
dtSubject <- rbind(dt_train, dt_test)
setnames(dtSubject, "V1", "subject")
dtActivity <- rbind(dt_train, dt_test)
setnames(dtActivity, "V1", "activityNum")
dt <- rbind(dt_train, dt_test)
dtSubject <- cbind(dtSubject, dtActivity)
dt <- cbind(dtSubject, dt)
setkey(dt, subject, activityNum)
dtFeatures <- fread("features.txt"))
dtFeatures <- fread("features.txt")
setnames(dtFeatures, names(dtFeatures), c("featureNum", "featureName"))
dtFeatures
dtFeatures <- dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)]
dtFeatures
dtFeatures$featureCode <- dtFeatures[, paste0("V", featureNum)]
head(dtFeatures)
dtFeatures$featureCode
select <- c(key(dt), dtFeatures$featureCode)
dt <- dt[, select, with=FALSE]
dt
dtActivityNames <- fread("activity_labels.txt")
setnames(dtActivityNames, names(dtActivityNames), c("activityNum", "activityName"))
dt <- merge(dt, dtActivityNames, by="activityNum", all.x=TRUE)
dt
grepthis <- function (regex) {
grepl(regex, dt$feature)
}
## Features with 2 categories
n <- 2
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("^t"), grepthis("^f")), ncol=nrow(y))
dt$featDomain <- factor(x %*% y, labels=c("Time", "Freq"))
x <- matrix(c(grepthis("Acc"), grepthis("Gyro")), ncol=nrow(y))
dt$featInstrument <- factor(x %*% y, labels=c("Accelerometer", "Gyroscope"))
x <- matrix(c(grepthis("BodyAcc"), grepthis("GravityAcc")), ncol=nrow(y))
dt$featAcceleration <- factor(x %*% y, labels=c(NA, "Body", "Gravity"))
x <- matrix(c(grepthis("mean()"), grepthis("std()")), ncol=nrow(y))
dt$featVariable <- factor(x %*% y, labels=c("Mean", "SD"))
## Features with 1 category
dt$featJerk <- factor(grepthis("Jerk"), labels=c(NA, "Jerk"))
dt$featMagnitude <- factor(grepthis("Mag"), labels=c(NA, "Magnitude"))
## Features with 3 categories
n <- 3
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("-X"), grepthis("-Y"), grepthis("-Z")), ncol=nrow(y))
dt$featAxis <- factor(x %*% y, labels=c(NA, "X", "Y", "Z"))
dt$activity <- factor(dt$activityName)
dt$feature <- factor(dt$featureName)
grepthis <- function (regex) {
grepl(regex, dt$feature)
}
## Features with 2 categories
n <- 2
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("^t"), grepthis("^f")), ncol=nrow(y))
dt$featDomain <- factor(x %*% y, labels=c("Time", "Freq"))
x <- matrix(c(grepthis("Acc"), grepthis("Gyro")), ncol=nrow(y))
dt$featInstrument <- factor(x %*% y, labels=c("Accelerometer", "Gyroscope"))
x <- matrix(c(grepthis("BodyAcc"), grepthis("GravityAcc")), ncol=nrow(y))
dt$featAcceleration <- factor(x %*% y, labels=c(NA, "Body", "Gravity"))
x <- matrix(c(grepthis("mean()"), grepthis("std()")), ncol=nrow(y))
dt$featVariable <- factor(x %*% y, labels=c("Mean", "SD"))
## Features with 1 category
dt$featJerk <- factor(grepthis("Jerk"), labels=c(NA, "Jerk"))
dt$featMagnitude <- factor(grepthis("Mag"), labels=c(NA, "Magnitude"))
## Features with 3 categories
n <- 3
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("-X"), grepthis("-Y"), grepthis("-Z")), ncol=nrow(y))
dt$featAxis <- factor(x %*% y, labels=c(NA, "X", "Y", "Z"))
grepthis <- function (regex) {
grepl(regex, dt$feature)
}
n <- 2
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("^t"), grepthis("^f")), ncol=nrow(y))
dt$featDomain <- factor(x %*% y, labels=c("Time", "Freq"))
dt <- merge(dt, dtActivityNames, by="activityNum", all.x=TRUE)
setkey(dt, subject, activityNum, activityName)
dtActivityNames <- fread("activity_labels.txt")
setnames(dtActivityNames, names(dtActivityNames), c("activityNum", "activityName"))
dt <- merge(dt, dtActivityNames, by="activityNum", all.x=TRUE)
setkey(dt, subject, activityNum, activityName)
dt <- data.table(melt(dt, key(dt), variable.name="featureCode"))
setkey(dt, subject, activityNum, activityName)
dt <- data.table(melt(dt, key(dt), variable.name="featureCode"))
dt <- merge(dt, dtFeatures[, list(featureNum, featureCode, featureName)], by="featureCode", all.x=TRUE)
dt$activity <- factor(dt$activityName)
dt$feature <- factor(dt$featureName)
grepthis <- function (regex) {
grepl(regex, dt$feature)
}
## Features with 2 categories
n <- 2
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("^t"), grepthis("^f")), ncol=nrow(y))
dt$featDomain <- factor(x %*% y, labels=c("Time", "Freq"))
x <- matrix(c(grepthis("Acc"), grepthis("Gyro")), ncol=nrow(y))
dt$featInstrument <- factor(x %*% y, labels=c("Accelerometer", "Gyroscope"))
x <- matrix(c(grepthis("BodyAcc"), grepthis("GravityAcc")), ncol=nrow(y))
dt$featAcceleration <- factor(x %*% y, labels=c(NA, "Body", "Gravity"))
x <- matrix(c(grepthis("mean()"), grepthis("std()")), ncol=nrow(y))
dt$featVariable <- factor(x %*% y, labels=c("Mean", "SD"))
## Features with 1 category
dt$featJerk <- factor(grepthis("Jerk"), labels=c(NA, "Jerk"))
dt$featMagnitude <- factor(grepthis("Mag"), labels=c(NA, "Magnitude"))
## Features with 3 categories
n <- 3
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepthis("-X"), grepthis("-Y"), grepthis("-Z")), ncol=nrow(y))
dt$featAxis <- factor(x %*% y, labels=c(NA, "X", "Y", "Z"))
dtSubjectTrain <- fread("subject_train.txt")
dtSubjectTest  <- fread("subject_test.txt" )
dtActivityTrain <- fread("Y_train.txt")
dtActivityTest  <- fread("Y_test.txt" )
file_train <- read.table("X_train.txt")
dt_train <- data.table(file_train)
file_test <- read.table("X_test.txt")
dt_test <- data.table(file_train)
dtSubject <- rbind(dt_train, dt_test)
setnames(dtSubject, "V1", "subject")
dtActivity <- rbind(dt_train, dt_test)
setnames(dtActivity, "V1", "activityNum")
dt <- rbind(dt_train, dt_test)
dtSubject <- cbind(dtSubject, dtActivity)
dt <- cbind(dtSubject, dt)
setkey(dt, subject, activityNum)
dtFeatures <- fread("features.txt")
setnames(dtFeatures, names(dtFeatures), c("featureNum", "featureName"))
dtFeatures <- dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)]
dtFeatures$featureCode <- dtFeatures[, paste0("V", featureNum)]
head(dtFeatures)
dtFeatures$featureCode
select <- c(key(dt), dtFeatures$featureCode)
dt <- dt[, select, with=FALSE]
dtActivityNames <- fread("activity_labels.txt")
setnames(dtActivityNames, names(dtActivityNames), c("activityNum", "activityName"))
dtFeatures$featureCode <- dtFeatures[, paste0("V", featureNum)]
head(dtFeatures)
dtFeatures$featureCode
select <- c(key(dt), dtFeatures$featureCode)
dt <- dt[, select, with=FALSE]
dtActivityNames <- fread("activity_labels.txt")
setnames(dtActivityNames, names(dtActivityNames), c("activityNum", "activityName"))
dt <- merge(dt, dtActivityNames, by="activityNum", all.x=TRUE)
setkey(dt, subject, activityNum, activityName)
dt <- data.table(melt(dt, key(dt), variable.name="featureCode"))
dt <- merge(dt, dtFeatures[, list(featureNum, featureCode, featureName)], by="featureCode", all.x=TRUE)
dt$activity <- factor(dt$activityName)
dt$feature <- factor(dt$featureName)
n <- 2
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepl("^t", dt$feature), grepl("^f", dt$feature)), ncol=nrow(y))
dt$featDomain <- factor(x %*% y, labels=c("Time", "Freq"))
x <- matrix(c(grepl("Acc", dt$feature), grepl("Gyro"), dt$feature), ncol=nrow(y))
x <- matrix(c(grepl("Acc", dt$feature), grepl("Gyro", dt$feature)), ncol=nrow(y))
dt$featInstrument <- factor(x %*% y, labels=c("Accelerometer", "Gyroscope"))
x <- matrix(c(grepl("BodyAcc", dt$feature), grepl("GravityAcc", dt$feature)), ncol=nrow(y))
dt$featAcceleration <- factor(x %*% y, labels=c(NA, "Body", "Gravity"))
x <- matrix(c(grepl("mean()", dt$feature), grepl("std()", dt$feature)), ncol=nrow(y))
dt$featVariable <- factor(x %*% y, labels=c("Mean", "SD"))
dt$featJerk <- factor(grepl("Jerk", dt$feature), labels=c(NA, "Jerk"))
dt$featMagnitude <- factor(grepl("Mag", dt$feature), labels=c(NA, "Magnitude"))
n <- 3
y <- matrix(seq(1, n), nrow=n)
x <- matrix(c(grepl("-X", dt$feature), grepl("-Y", dt$feature), grepl("-Z", dt$feature)), ncol=nrow(y))
dt$featAxis <- factor(x %*% y, labels=c(NA, "X", "Y", "Z"))
r1 <- nrow(dt[, .N, by=c("feature")])
r2 <- nrow(dt[, .N, by=c("featDomain", "featAcceleration", "featInstrument", "featJerk", "featMagnitude", "featVariable", "featAxis")])
r1 == r2
setkey(dt, subject, activity, featDomain, featAcceleration, featInstrument, featJerk, featMagnitude, featVariable, featAxis)
dtTidy <- dt[, list(count = .N, average = mean(value)), by=key(dt)]
dtTidy
activityLabels <- fread("activity_labels.txt", col.names = c("classLabels", "activityName"))
features <- fread("features.txt", col.names = c("index", "featureNames")
features <- fread("features.txt", col.names = c("index", "featureNames"))
features <- fread("features.txt", col.names = c("index", "featureNames"))
featuresWanted <- grep("(mean|std)\\(\\)", features[, featureNames])
measurements <- features[featuresWanted, featureNames]
measurements <- gsub('[()]', '', measurements)
train <- fread("X_train.txt")[, featuresWanted, with = FALSE]
data.table::setnames(train, colnames(train), measurements)
trainActivities <- fread("Y_train.txt", col.names = c("Activity"))
trainSubjects <- fread("subject_train.txt", col.names = c("SubjectNum"))
train <- cbind(trainSubjects, trainActivities, train)
test <- fread("X_test.txt")[, featuresWanted, with = FALSE]
data.table::setnames(test, colnames(test), measurements)
test <- fread("X_test.txt")[, featuresWanted, with = FALSE]
data.table::setnames(test, colnames(test), measurements)
testActivities <- fread("Y_test.txt", col.names = c("Activity"))
testSubjects <- fread("subject_test.txt", col.names = c("SubjectNum"))
test <- cbind(testSubjects, testActivities, test)
combined <- rbind(train, test)
combined[["Activity"]] <- factor(combined[, Activity]
, levels = activityLabels[["classLabels"]]
, labels = activityLabels[["activityName"]])
combined[["SubjectNum"]] <- as.factor(combined[, SubjectNum])
combined <- reshape2::melt(data = combined, id = c("SubjectNum", "Activity"))
combined <- reshape2::dcast(data = combined, SubjectNum + Activity ~ variable, fun.aggregate = mean)
data.table::fwrite(x = combined, file = "tidyData.txt", quote = FALSE)
library(reshape2)
install.packages("reshape2")
library(reshape2)
combined[["SubjectNum"]] <- as.factor(combined[, SubjectNum])
combined <- reshape2::melt(data = combined, id = c("SubjectNum", "Activity"))
combined <- reshape2::dcast(data = combined, SubjectNum + Activity ~ variable, fun.aggregate = mean)
data.table::fwrite(x = combined, file = "tidyData.txt", quote = FALSE)
dtTidy
combined
featuresWantedtu
featuresWanted
features
measurements <- features[featuresWanted, featureNames]
measurements
measurements <- gsub('[()]', '', measurements)
measurements
activityLabels <- fread("activity_labels.txt", col.names = c("classLabels", "activityName"))
activityLabels
dtActivityNames <- fread("activity_labels.txt")
dtActivityNames <- fread("activity_labels.txt")
dtActivityNames
setnames(dtActivityNames, names(dtActivityNames), c("activityNum", "activityName"))
dtActivityNames
activityLabels <- fread("activity_labels.txt", col.names = c("classLabels", "activityName"))
activityLabels
dtFeatures <- fread("features.txt")
setnames(dtFeatures, names(dtFeatures), c("featureNum", "featureName"))
dtFeatures <- dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)]
dtFeatures
head(dtFeatures)
dtFeatures$featureCode <- dtFeatures[, paste0("V", featureNum)]
head(dtFeatures)
dtFeatures$featureCode
select <- c(key(dt), dtFeatures$featureCode)
select
dt <- dt[, select, with=FALSE]
dtSubjectTrain <- fread("subject_train.txt")
dtSubjectTest  <- fread("subject_test.txt" )
dtActivityTrain <- fread("Y_train.txt")
dtActivityTest  <- fread("Y_test.txt" )
file_train <- read.table("X_train.txt")
dt_train <- data.table(file_train)
file_test <- read.table("X_test.txt")
dt_test <- data.table(file_train)
dtSubject <- rbind(dt_train, dt_test)
setnames(dtSubject, "V1", "subject")
dtActivity <- rbind(dt_train, dt_test)
setnames(dtActivity, "V1", "activityNum")
dt <- rbind(dt_train, dt_test)
dt
train <- fread("X_train.txt")[, featuresWanted, with = FALSE]
data.table::setnames(train, colnames(train), measurements)
trainActivities <- fread("Y_train.txt", col.names = c("Activity"))
trainSubjects <- fread("subject_train.txt", col.names = c("SubjectNum"))
train <- cbind(trainSubjects, trainActivities, train)
train
test <- fread("X_test.txt")[, featuresWanted, with = FALSE]
data.table::setnames(test, colnames(test), measurements)
testActivities <- fread("Y_test.txt", col.names = c("Activity"))
testSubjects <- fread("subject_test.txt", col.names = c("SubjectNum"))
test <- cbind(testSubjects, testActivities, test)
# merge datasets
combined <- rbind(train, test)
combined
dt
dtSubject <- cbind(dtSubject, dtActivity)
dt <- cbind(dtSubject, dt)
dt
setkey(dt, subject, activityNum)
dtFeatures <- fread("features.txt")
setnames(dtFeatures, names(dtFeatures), c("featureNum", "featureName"))
dtFeatures <- dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)]
dtFeatures
dtFeatures$featureCode <- dtFeatures[, paste0("V", featureNum)]
dtFeatures
dtFeatures$featureCode <- dtFeatures[, paste0("V", featureNum)]
head(dtFeatures)
dtFeatures$featureCode
select <- c(key(dt), dtFeatures$featureCode)
dt <- dt[, select, with=FALSE]
dt
combined
head(dt)
head(combined)
dtSubjectTrain <- fread("subject_train.txt")
dtSubjectTest  <- fread("subject_test.txt" )
dtActivityTrain <- fread("Y_train.txt")
dtActivityTest  <- fread("Y_test.txt" )
file_train <- read.table("X_train.txt")
dt_train <- data.table(file_train)
file_test <- read.table("X_test.txt")
dt_test <- data.table(file_train)
dtSubject <- rbind(dt_train, dt_test)
setnames(dtSubject, "V1", "subject")
dtActivity <- rbind(dt_train, dt_test)
setnames(dtActivity, "V1", "activityNum")
dt <- rbind(dt_train, dt_test)
#Merge columns.
dtSubject <- cbind(dtSubject, dtActivity)
dt <- cbind(dtSubject, dt)
#Set key.
setkey(dt, subject, activityNum)
dtFeatures <- fread("features.txt")
setnames(dtFeatures, names(dtFeatures), c("featureNum", "featureName"))
dtFeatures <- dtFeatures[grepl("mean\\(\\)|std\\(\\)", featureName)]
dtFeatures$featureCode <- dtFeatures[, paste0("V", featureNum)]
head(dtFeatures)
dtFeatures$featureCode
select <- c(key(dt), dtFeatures$featureCode)
dt <- dt[, select, with=FALSE]
head(dt)
dtActivityNames <- fread("activity_labels.txt")
setnames(dtActivityNames, names(dtActivityNames), c("activityNum", "activityName"))
dt <- merge(dt, dtActivityNames, by="activityNum", all.x=TRUE)
head(dt)
activity_names <- fread("activity_labels.txt", col.names = c("activity_num", "activity_name"))
activity_names
feature_names <- fread("features.txt", col.names = c("feature_num", "feature_name"))
head(activity_names)
head(feature_names)
necessary_features <- grep("(mean|std)\\(\\)", feature_names[, feature_name])
head(necessary_features)
activityLabels <- fread("activity_labels.txt", col.names = c("classLabels", "activityName"))
features <- fread("features.txt", col.names = c("index", "featureNames"))
featuresWanted <- grep("(mean|std)\\(\\)", features[, featureNames])
featuresWanted
feature_names <- fread("features.txt", col.names = c("feature_num", "feature_name"))
head(feature_names)
feature_names <- gsub('[()]', '', feature_names)
head(feature_names)
feature_names <- fread("features.txt", col.names = c("feature_num", "feature_name"))
dim(feature_names)
typeof(feature_names)
feature_names <- fread("features.txt", col.names = c("feature_num", "feature_name"))
typeof(feature_names)
dim(feature_names)
head(feature_names)
feature_names <- gsub('[()]', '', feature_names)
typeof(feature_names)
dim(feature_names)
head(feature_names)
feature_names <- fread("features.txt", col.names = c("feature_num", "feature_name"))
typeof(feature_names)
dim(feature_names)
head(feature_names)
necessary_features <- grep("(mean|std)\\(\\)", feature_names[, feature_name])
typeof(feature_names)
dim(feature_names)
head(feature_names)
feature_names <- fread("features.txt", col.names = c("feature_num", "feature_name"))
typeof(feature_names)
dim(feature_names)
head(feature_names)
necessary_features <- grep("(mean|std)\\(\\)", feature_names[, feature_name])
typeof(feature_names)
dim(feature_names)
head(feature_names)
necessary_features <- grep("(mean|std)\\(\\)", feature_names[, feature_name])
typeof(necessary_features)
dim(necessary_features)
head(necessary_features)
features <- fread("features.txt", col.names = c("index", "featureNames"))
featuresWanted <- grep("(mean|std)\\(\\)", features[, featureNames])
measurements <- features[featuresWanted, featureNames]
measurements <- gsub('[()]', '', measurements)
measurements
dim(measurements)
features <- fread("features.txt", col.names = c("index", "featureNames"))
features
featuresWanted <- grep("(mean|std)\\(\\)", features[, featureNames])
featuresWanted
measurements <- features[featuresWanted, featureNames]
measurements
feature_names <- fread("features.txt", col.names = c("feature_num", "feature_name"))
display_info(feature_names)
display_info <- function(obj) {
message(typeof(obj))
message(dim(obj))
message(head(obj))
}
display_info(feature_names)
necessary_features <- grep("(mean|std)\\(\\)", feature_names[, feature_name])
display_info(necessary_features)
feature_names <- gsub('[()]', '', feature_names)
display_info(necessary_features)
feature_list <- feature_names[necessary_features, feature_name]
features <- fread("features.txt", col.names = c("index", "featureNames"))
featuresWanted <- grep("(mean|std)\\(\\)", features[, featureNames])
measurements <- features[featuresWanted, featureNames]
measurements <- gsub('[()]', '', measurements)
feature_names <- fread("features.txt", col.names = c("feature_num", "feature_name"))
necessary_features <- grep("(mean|std)\\(\\)", feature_names[, feature_name])
feature_names <- fread("features.txt", col.names = c("feature_num", "feature_name"))
# extract the index numbers of only the MEAN/STD features the instructions mentioned
necessary_features <- grep("(mean|std)\\(\\)", feature_names[, feature_name])
feature_list <- feature_names[necessary_features, feature_name]
feature_list <- gsub('[()]', '', feature_list)
feature_list
feature_list <- feature_names[necessary_features, feature_name]
display_info(feature_list)
feature_list <- gsub('[()]', '', feature_list)
display_info(feature_list)
train_measurements <- fread("X_train.txt")[, necessary_features, with = FALSE]
train_measurements
data.table::setnames(train_measurements, colnames(train_measurements), feature_list)
train_measurements
train_activities <- fread("y_train.txt", col.names = c("activity"))
train_activities
train_subjects <- fread("subject_train.txt", col.names = c("subject_num"))
train_subjects
dt_train <- cbind(train_subjects, train_activities, train_measurements)
dt_train
display_info(dt_train)
train_data <- cbind(train_subjects, train_activities, train_measurements)
display_info(train_data)
test_measurements <- fread("X_test.txt")[, necessary_features, with = FALSE]
# replace the "column names" with the MEANINGFUL names we scrubbed
data.table::setnames(test_measurements, colnames(test_measurements), feature_list)
# read in the activity numbers the correspond with the labels
# we read in earlier (e.g. 1 WALKING; 4 SITTING, etc...)
test_activities <- fread("y_test.txt", col.names = c("activity"))
# read in the numbers of the human test subjects (1 thru 30)
test_subjects <- fread("subject_test.txt", col.names = c("subject_num"))
test_data <- cbind(test_subjects, test_activities, test_measurements)
display_info(test_data)
combined_data <- rbind(train_data, test_data)
combined_data
combined_data[["activity"]] <- factor(combined_data[, Activity]
, levels = activity_names[["activity_num"]]
, labels = activity_names[["activity_name"]])
combined_data[["activity"]] <- factor(combined_data[, activity]
, levels = activity_names[["activity_num"]]
, labels = activity_names[["activity_name"]])
combined_data
display_info(combined_data)
combined_data
combined_data <- rbind(train_data, test_data)
combined_data
combined_data[["activity"]] <- factor(combined_data[, activity]
, levels = activity_names[["activity_num"]]
, labels = activity_names[["activity_name"]])
combined_data
combined_data
combined_data[["subject_num"]] <- as.factor(combined_data[, subject_num])
combined_data
?reshape2
??reshape2
?melt
combined_data[["subject_num"]] <- as.factor(combined_data[, subject_num])
combined_data <- reshape2::melt(data = combined_data, id = c("subject_num", "activity"))
combined_data
combined_data <- reshape2::dcast(data = combined_data, subject_num + activity ~ variable, fun.aggregate = mean)
combined_data
data.table::fwrite(x = combined, file = "tidy_output_data.txt", quote = FALSE)
data.table::fwrite(x = combined_data, file = "tidy_output_data.txt", quote = FALSE)
combined_data <- rbind(train_data, test_data)
str(combined_data)
combined_data[["activity"]] <- factor(
combined_data[, activity]
, levels = activity_names[["activity_num"]]
, labels = activity_names[["activity_name"]]
)
str(combined_data)
str(combined_data)
combined_data
str(combined_data)
combined_data[["subject_num"]] <- as.factor(combined_data[, subject_num])
str(combined_data)
combined_data <- reshape2::melt(data = combined_data, id = c("subject_num", "activity"))
str(combined_data)
combined_data <- reshape2::dcast(data = combined_data, subject_num + activity ~ variable, fun.aggregate = mean)
str(combined_data)
verify_tidy_data <- fread("tidy_output_data.txt")
head(verify_tidy_data)
